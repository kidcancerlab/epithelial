## B6 and F420
### Create the merged tumor/normal object
Process into a shared UMAP space
```{r b6_f420_1, dependson='load_raw', eval=TRUE}
sobj_list <- qs::qread("output/rdata/sobj_list.qs")

set.seed(1337)
b6_f420_combined <-
    merge(
        sobj_list[["C57BL6"]],
        y = sobj_list[["F420"]],
        add.cell.ids = c("C57BL6", "F420")
    ) %>%
    SCTransform(verbose = FALSE) %>%
    RunPCA(npcs = 30, verbose = FALSE) %>%
    RunUMAP(dims = 1:30, verbose = FALSE) %>%
    FindNeighbors(k.param = 30, verbose = FALSE) %>%
    FindClusters(resolution  = 0.3, verbose = FALSE)
```

### Assign cell types to the combined object
```{r b6_f420_2, dependson='b6_f420_1', eval=TRUE}
if (file.exists("misc/b6_f420_assignments.qs")) {
    b6_f420_combined <- AddMetaData(b6_f420_combined,
        qs::qread("misc/b6_f420_assignments.qs"))
} else {
    b6_f420_combined@meta.data <-
        b6_f420_combined@meta.data %>%
        rownames_to_column("cell_id") %>%
        left_join(
            read_tsv("misc/coarse_types.tsv", show_col_types = FALSE),
            by = "cell_type"
        ) %>%
        column_to_rownames("cell_id")

    sil_scoring <-
        optimize_silhouette(
            b6_f420_combined,
            test_res = seq(0.1, 1, by = 0.05),
            summary_plot = FALSE
        ) %>%
        arrange(desc(sil_vals))

    b6_f420_combined <-
        FindClusters(
            b6_f420_combined,
            resolution = sil_scoring$res_vals[1]
        )

    tentative_assignments <-
        b6_f420_combined@meta.data %>%
        select(cell_type_coarse, seurat_clusters) %>%
        group_by(seurat_clusters, cell_type_coarse) %>%
        dplyr::summarize(n = n(), .groups = "drop") %>%
        group_by(seurat_clusters) %>%
        arrange(desc(n)) %>%
        select(-n) %>%
        dplyr::rename(tentative = "cell_type_coarse") %>%
        slice_head(n = 1)

    b6_f420_combined@meta.data <-
        b6_f420_combined@meta.data %>%
        rownames_to_column("cell_id") %>%
        left_join(tentative_assignments, by = "seurat_clusters") %>%
        column_to_rownames("cell_id")

    # Check identities from SingleR calls and other meta
    table(
        b6_f420_combined$cell_type_coarse,
        b6_f420_combined$seurat_clusters
    ) %>%
        pheatmap::pheatmap(
            scale = "column",
            display_numbers = TRUE,
            cluster_cols = FALSE,
            filename = "output/figures/b6_f420_cluster_assignments_heatmap.png",
            width = 12,
            height = 6
        )
    # unclear clusters: 24, 23, 6, 26

    DimPlot(
        b6_f420_combined,
        cells.highlight = WhichCells(b6_f420_combined, idents = 6)
    )

    clusters_remove <- c(6, 23, 24, 26)

    b6_f420_combined <-
        subset(
            b6_f420_combined,
            idents = clusters_remove,
            invert = TRUE
        ) %>%
        SCTransform(verbose = FALSE) %>%
        RunPCA(npcs = 30, verbose = FALSE) %>%
        RunUMAP(dims = 1:30, verbose = FALSE) %>%
        FindNeighbors(k.param = 30, verbose = FALSE) %>%
        FindClusters(verbose = FALSE)

    b6_f420_combined$cell_type_final <- b6_f420_combined$tentative

    DimPlot(
        b6_f420_combined,
        group.by = c("seurat_clusters", "cell_type_final"),
        split.by = "sample",
        label = TRUE,
        repel = TRUE
    ) +
        NoLegend()

    qs::qsave(b6_f420_combined, file = "output/rdata/b6_f420_combined_all.qs")


    qs::qsave(
        b6_f420_combined[["cell_type_final"]],
        file = "misc/b6_f420_assignments.qs"
    )

    r_dim_plot(b6_f420_combined, group.by = "seurat_clusters", split.by = "sample")
    b6_f420_combined <- run_fdl(b6_f420_combined, graph = "SCT_snn")
    r_dim_plot(b6_f420_combined, group.by = "seurat_clusters", split.by = "sample", reduction = "fdl")
    r_dim_plot(b6_f420_combined, group.by = "cell_type", split.by = "sample")
    r_feature_plot(b6_f420_combined, features = "cell_score", split.by = "sample")
    r_feature_plot(b6_f420_combined, features = "nCount_RNA", split.by = "sample")
    r_feature_plot(b6_f420_combined, features = "Col1a1", split.by = "sample")
    r_feature_plot(b6_f420_combined, features = "Col1a2", split.by = "sample")

    p1 <- r_dim_plot(b6_f420_combined, group.by = "cell_type", repel = TRUE)
    p2 <- r_dim_plot(b6_f420_combined, group.by = "seurat_clusters")
    p1 | p2
}
```

### Create publication plots and save
```{r b6_f420_4, dependson='b6_f420_3', eval=TRUE}
# Remove tumor cells, low quality cells, and erythrocytes
Idents(b6_f420_combined) <- b6_f420_combined$cell_type_final
b6_f420_combined <- subset(b6_f420_combined,
    idents = c("Tumor"),
    invert = TRUE)

# Plot and save
r_dim_plot(b6_f420_combined, "F420 Stroma",
    group.by = "cell_type_final",
    split.by = "sample")

ggsave("output/figures/combined_b6_f420.pdf",
    width = 8,
    height = 6)

qs::qsave(b6_f420_combined, "output/rdata/b6_f420_combined.qs")

mouse_marks <- c(
    "Itgam", "Fcgr1", "Cx3cr1", # Monocyte/Macrophage
    "Cd68", "Itgax", "Mertk", # Alveolar macrophage
    "Pecam1", "Tek", "Ptprb", # Endothelial
    "Cd3d", "Itk", "Tcf7", # T/NK cell
    "Cd209a", "Ccl17", "Etv3", # Dendritic cell
    "Foxl1", "Scgb1a1", "Epcam", # Proximal airway
    "Sftpd", "Ager", "Aqp5", # Distal airway
    "Pdgfra", "Ltbp4", "Gsn", # Fibroblast
    "Cd19", "Cd79a", "Pax5", # B cell
    "Csf3r", "S100a9", "Mxd1", # Granulocyte
    "Apoc1", "Adipoq", "Retn", # Adipocyte
    "Postn", "Pde5a", "Pdzd2" # Pericyte
)

b6_f420_combined$cell_type_final <- factor(
    b6_f420_combined$cell_type_final,
    levels = c("Monocyte/Macrophage", "Alveolar macrophage", "Endothelial cell",
        "T/NK cell", "Dendritic cell", "Upper airway cell",
        "Distal airway cell", "Fibroblast", "B cell",
        "Granulocyte"))

DotPlot(b6_f420_combined,
    features = mouse_marks,
    group.by = "cell_type_final",
    cols = "RdBu",
    col.max = 1.5) +
    scale_y_discrete(limits = rev) +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
    coord_fixed()
```

### Create frequency plots of stromal and immune cells
```{r b6_f420_5, dependson='b6_f420_4', eval=TRUE}
subset(
    b6_f420_combined,
    idents = c(
        "Monocyte/Macrophage",
        "Alveolar macrophage",
        "T/NK cell",
        "Dendritic cell",
        "B cell",
        "Granulocyte"
    )
)@meta.data %>%
    ggplot(aes(sample, fill = cell_type_final)) +
        geom_bar(position = "fill") +
        theme_classic()

ggsave("output/figures/b6_immune.pdf",
    width = 4,
    height = 4)

subset(
    b6_f420_combined,
    idents = c(
        "Endothelial cell",
        "Upper airway cell",
        "Distal airway cell",
        "Fibroblast"
    )
)@meta.data %>%
    ggplot(aes(sample, fill = cell_type_final)) +
        geom_bar(position = "fill") +
        theme_classic()

ggsave("output/figures/b6_stroma.pdf",
    width = 4,
    height = 4)
```
