## Load reference data to create single cell matrix
```{r load_spatial_ref}
#| cache.vars: macs, murine_aec, mouse_lung_ref, f420
macs <- qs::qread("output/rdata/macs_subclustered.qs")
macs$cell_type_orig <- macs$cell_type
macs_celltypes <- qs::qread("misc/murine_macs_assignments.qs") %>%
    enframe() %>%
    column_to_rownames("name") %>%
    rename(cell_type = value)

macs <- AddMetaData(macs, macs_celltypes)
macs <- subset(macs, cell_type %in% unique(macs$cell_type))
Idents(macs) <- "cell_type"
macs <-
    RenameIdents(
        macs,
        "scarMacs" = "Scar-TAMs",
        "angioMacs" = "Angio-TAMs"
    )

# Epithelial cells

## Do we need to harmonize this across analyses? ####################################################################################
murine_aec <- qs::qread("output/rdata/murine_aec_post-filtering.qs")
murine_aec <-
    RenameIdents(
        murine_aec,
        `0` = "DATP",
        `1` = "AEC2",
        `2` = "DATP",
        `3` = "pAEC2",
        `4` = "cAEC2",
        `5` = "AEC1",
        `6` = "cAEC2"
    )

murine_aec$cell_type <- Idents(murine_aec)

ref_path <- "/home/gdrobertslab/lab/GenRef/sc_ref_datasets/mouse"
mouse_lung_ref <- qs::qread(paste0(ref_path, "/GSE151974/mouse_lung_ref.qs"))

# Subset out the epithelial and macrophage cells since we have those above
redundant_types <-
    c(
        "AT1",
        "AT2 1",
        "AT2 2",
        "DC1",
        "DC2",
        "Int Mf",
        "Mono"
    )
keep_cell_types <- setdiff(unique(mouse_lung_ref$cell_type), redundant_types)

mouse_lung_ref <-
    subset(mouse_lung_ref, cell_type %in% keep_cell_types)

f420 <- qs::qread("output/rdata/f420_reference.qs")
```

## Merge and process reference data
```{r combine_spatial_ref}
#| cache.vars: all_ref
all_ref <-
    merge(mouse_lung_ref, list(macs, murine_aec, f420)) %>%
    JoinLayers() %>%
    process_seurat()

test <- DietSeurat(all_ref, data = FALSE)
test@meta.data <-
    all_ref@meta.data[, c(
        "cell_type",
        "seurat_clusters",
        "nCount_RNA",
        "orig.ident",
        "nFeature_RNA",
        "sample_name",
        "model",
        "sample_description"
        )]

qs::qsave(test, "output/rdata/spatial_reference.qs")

plot_name <-
    DimPlot(
        all_ref,
        group.by = "cell_type",
        label = TRUE,
        repel = TRUE
    ) +
    NoLegend()

ggsave("output/figures/spatial/spacexr_ref_data.pdf",
       plot_name,
       width = 10,
       height = 10)
```

### Create the Reference object
```{r make_spacexr_ref}
#| cache.vars: spacexr_reference
spacexr_reference <-
    spacexr::Reference(
        GetAssayData(all_ref, layer = "counts"),
        as.factor(all_ref$cell_type)
    )
```

```{r load_spatial_object}
#| cache.vars: my_data, spatial_data
spatial_data <- qs::qread("output/rdata/spatial_data.qs")

coords <-
    GetTissueCoordinates(spatial_data) %>%
    select(-cell)

my_data <-
    spacexr::SpatialRNA(coords,
                        GetAssayData(spatial_data, layer = "counts"))
```

## Run the RCTD analysis with spacexr
```{r run_decomposition}
#| cache.vars: rctd_out
rctd_obj <-
    spacexr::create.RCTD(my_data, spacexr_reference, max_cores = 2)

rctd_out <-
    spacexr::run.RCTD(rctd_obj, doublet_mode = "full")

qs::qsave(rctd_out, "output/rdata/rctd_out.qs")
```


```{r plot_spacexr_celltypes}
norm_weights <-
    spacexr::normalize_weights(rctd_out@results$weights)

spatial_data <-
    AddMetaData(spatial_data, norm_weights)

qs::qsave(spatial_data, "output/rdata/spatial_data_deconvoluted.qs")

for (cell_type in all_ref$cell_type %>% unique()) {
    subset_data <-
        spatial_data[, !is.na(spatial_data[[cell_type]])]

    plot_name <-
        SpatialFeaturePlot(
            subset_data,
            features = c(cell_type, "Tumor"),
            ncol = 2,
            pt.size.factor = 2.5
        )

    ggsave(paste0("output/figures/spatial/spacexr_",
                  cell_type,
                  ".png"),
           plot_name,
           width = 10,
           height = 10)
}
```

## Plot
```{r}
labels <- list("6" = "core",
               "4" = "middle",
               "7" = "periphery")

for (cluster_number in names(labels)) {
    tumor_c_celltypes <-
        subset(spatial_data, seurat_clusters == cluster_number)@meta.data %>%
        select(colnames(norm_weights)) %>%
        as_tibble() %>%
        pivot_longer(everything()) %>%
        group_by(name) %>%
        mutate(median_value = median(value, na.rm = TRUE)) %>%
        ungroup() %>%
        mutate(name = factor(name) %>%
               fct_reorder(median_value),
               factor_number = as.numeric(name)) %>%
        filter(factor_number >= max(factor_number) - 10) %>%
        ggplot(aes(y = name, x = value)) +
        geom_boxplot() +
        geom_point() +
        labs(x = "Normalized Weight",
             y = "Cell Type",
             title = paste0("Tumor Cell Types in the ",
                            labels[[cluster_number]]))

    ggsave(paste0("output/figures/spatial/spacexr_tumor_",
                  labels[[cluster_number]],
                  "_celltypes.png"),
        tumor_c_celltypes,
        width = 8,
        height = 10)
}
```