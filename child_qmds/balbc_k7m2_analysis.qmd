## BALBC and K7M2
```{r balbc_k7m2, dependson='load_raw', eval=TRUE}
sobj_list <- qs::qread("output/rdata/sobj_list.qs")

# Merge normal and tumor bearing lung for F420 and process into same UMAP space
balb_k7m2_combined <-
    merge(
        sobj_list[["BALBC"]],
        y = sobj_list[["K7M2"]],
        add.cell.ids = c("BALBC", "K7M2")
    ) %>%
    SCTransform(verbose = FALSE) %>%
    RunPCA(npcs = 30, verbose = FALSE) %>%
    RunUMAP(dims = 1:30, verbose = FALSE) %>%
    FindNeighbors(k.param = 30, verbose = FALSE) %>%
    FindClusters(resolution  = 0.3, verbose = FALSE)
```

### Assign cell types to the combined object
```{r balbc_k7m2_2, dependson='balbc_k7m2', eval=TRUE}
if (file.exists("misc/balb_k7m2_assignments.qs")) {
    balb_k7m2_combined <- AddMetaData(balb_k7m2_combined,
        qs::qread("misc/balb_k7m2_assignments.qs"))
} else {
    balb_k7m2_combined@meta.data <-
        balb_k7m2_combined@meta.data %>%
        rownames_to_column("cell_id") %>%
        left_join(
            read_tsv("misc/coarse_types.tsv", show_col_types = FALSE),
            by = "cell_type"
        ) %>%
        column_to_rownames("cell_id")

    sil_scoring <-
        optimize_silhouette(
            balb_k7m2_combined,
            test_res = seq(0.1, 1, by = 0.05),
            summary_plot = FALSE
        ) %>%
        arrange(desc(sil_vals))

    balb_k7m2_combined <-
        FindClusters(
            balb_k7m2_combined,
            resolution = sil_scoring$res_vals[1]
        )

    tentative_assignments <-
        balb_k7m2_combined@meta.data %>%
        select(cell_type_coarse, seurat_clusters) %>%
        group_by(seurat_clusters, cell_type_coarse) %>%
        dplyr::summarize(n = n(), .groups = "drop") %>%
        group_by(seurat_clusters) %>%
        arrange(desc(n)) %>%
        select(-n) %>%
        dplyr::rename(tentative = "cell_type_coarse") %>%
        slice_head(n = 1)

    balb_k7m2_combined@meta.data <-
        balb_k7m2_combined@meta.data %>%
        rownames_to_column("cell_id") %>%
        left_join(tentative_assignments, by = "seurat_clusters") %>%
        column_to_rownames("cell_id")

    # Check identities from SingleR calls and other meta
    table(
        balb_k7m2_combined$cell_type_coarse,
        balb_k7m2_combined$seurat_clusters
    ) %>%
        pheatmap::pheatmap(
            scale = "column",
            display_numbers = TRUE,
            cluster_cols = FALSE,
            filename = "output/figures/balb_k7m2_cluster_assignments_heatmap.png",
            width = 12,
            height = 6
        )
    # unclear clusters: 17 - this cluster has all the cells labeled as "tumor"
    # the healthy lung, 14 - is tumor plus a bunch of random stuff scattered all
    # over the place

    DimPlot(
        balb_k7m2_combined,
        cells.highlight = WhichCells(balb_k7m2_combined, idents = 6)
    )

    clusters_remove <- c(14, 17)

    balb_k7m2_combined <-
        subset(
            balb_k7m2_combined,
            idents = clusters_remove,
            invert = TRUE
        ) %>%
        SCTransform(verbose = FALSE) %>%
        RunPCA(npcs = 30, verbose = FALSE) %>%
        RunUMAP(dims = 1:30, verbose = FALSE) %>%
        FindNeighbors(k.param = 30, verbose = FALSE) %>%
        FindClusters(verbose = FALSE)

    balb_k7m2_combined$cell_type_final <- balb_k7m2_combined$tentative

    DimPlot(
        balb_k7m2_combined,
        group.by = c("seurat_clusters", "cell_type_final"),
        split.by = "sample",
        label = TRUE,
        repel = TRUE
    ) +
        NoLegend()

    qs::qsave(
        balb_k7m2_combined,
        file = "output/rdata/balb_k7m2_combined_all.qs"
    )

    qs::qsave(
        balb_k7m2_combined[["cell_type_final"]],
        file = "misc/balb_k7m2_assignments.qs"
    )

    DimPlot(
        balb_k7m2_combined,
        group.by = "seurat_clusters",
        split.by = "sample",
        label = TRUE
    ) +
        coord_fixed() +
        theme(legend.position = "none")
    DimPlot(
        balb_k7m2_combined,
        group.by = "cell_type",
        split.by = "sample",
        label = TRUE
    ) +
        coord_fixed() +
        theme(legend.position = "none")
    r_feature_plot(
        balb_k7m2_combined,
        features = "cell_score",
        split.by = "sample"
    ) +
        coord_fixed()
    r_feature_plot(
        balb_k7m2_combined,
        features = "nCount_RNA",
        split.by = "sample"
    ) +
        coord_fixed()
    r_feature_plot(
        balb_k7m2_combined,
        features = "Col1a1",
        split.by = "sample"
    ) +
        coord_fixed()
    r_feature_plot(
        balb_k7m2_combined,
        features = "Col1a2",
        split.by = "sample"
    ) +
        coord_fixed()

    p1 <- r_dim_plot(balb_k7m2_combined, group.by = "cell_type_final")
    p2 <- r_dim_plot(balb_k7m2_combined, group.by = "seurat_clusters")
    p1 | p2
}
```


### Create publication plots and save
```{r balbc_k7m2_3, dependson='balbc_k7m2_2', eval=TRUE}
# Remove tumor cells, low quality cells, and erythrocytes
Idents(balb_k7m2_combined) <- balb_k7m2_combined$cell_type_final
balb_k7m2_combined <-
    subset(
        balb_k7m2_combined,
        idents = c("Tumor"),
        invert = TRUE
    )

# Plot and save
r_dim_plot(
    balb_k7m2_combined,
    "K7M2 Stroma",
    group.by = "cell_type_final",
    split.by = "sample"
)

ggsave("output/figures/combined_balb_k7m2.pdf",
    width = 8,
    height = 6)

qs::qsave(balb_k7m2_combined, "output/rdata/balb_k7m2_combined.qs")

mouse_marks <- c(
    "Itgam", "Fcgr1", "Cx3cr1", # Monocyte/Macrophage
    "Cd68", "Itgax", "Mertk", # Alveolar macrophage
    "Pecam1", "Tek", "Ptprb", # Endothelial
    "Cd3d", "Itk", "Tcf7", # T/NK cell
    "Cd209a", "Ccl17", "Etv3", # Dendritic cell
    "Foxl1", "Scgb1a1", "Epcam", # Proximal airway
    "Sftpd", "Ager", "Aqp5", # Distal airway
    "Pdgfra", "Ltbp4", "Gsn", # Fibroblast
    "Cd19", "Cd79a", "Pax5", # B cell
    "Csf3r", "S100a9", "Mxd1" # Granulocyte
)

balb_k7m2_combined$cell_type_final <- factor(
    balb_k7m2_combined$cell_type_final,
    levels = c("Monocyte/Macrophage", "Alveolar macrophage", "Endothelial cell",
        "T/NK cell", "Dendritic cell", "Upper airway cell",
        "Distal airway cell", "Fibroblast", "B cell", "Granulocyte"))

DotPlot(balb_k7m2_combined,
    features = mouse_marks,
    group.by = "cell_type_final",
    cols = "RdBu",
    col.max = 1.5) +
    scale_y_discrete(limits = rev) +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
    coord_fixed()

# Create frequency plots of stromal and immune cells
subset(balb_k7m2_combined,
    idents = c(
        "Monocyte/Macrophage",
        "Alveolar macrophage",
        "T/NK cell",
        "Dendritic cell",
        "B cell",
        "Granulocyte"))@meta.data %>%
    ggplot(aes(sample, fill = cell_type_final)) +
        geom_bar(position = "fill") +
        theme_classic()

ggsave("output/figures/balb_immune.pdf",
    width = 4,
    height = 4)

subset(balb_k7m2_combined,
    idents = c(
        "Endothelial cell",
        "Upper airway cell",
        "Distal airway cell",
        "Fibroblast"))@meta.data %>%
    ggplot(aes(sample, fill = cell_type_final)) +
        geom_bar(position = "fill") +
        theme_classic()

ggsave("output/figures/balb_stroma.pdf",
    width = 4,
    height = 4)
```
