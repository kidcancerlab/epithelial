# Make a Seurat object of all the data (not corrected for model)
```{r merge_all, dependson='load_raw', eval=TRUE}
if(!file.exists("output/rdata/all_sobj.qs")) {
    sobj_list <- qs::qread("output/rdata/sobj_list.qs")
    all_sobj <-
        merge(sobj_list[[1]],
            sobj_list[2:length(sobj_list)],
            add.cell.ids = names(sobj_list)) %>%
            JoinLayers() %>%
        process_seurat()
    qs::qsave(all_sobj, file = "output/rdata/all_sobj.qs")
} else {
    all_sobj <- qs::qread("output/rdata/all_sobj.qs")
}

all_dim <-
    r_dim_plot(all_sobj,
        group.by = c("obj_name", "cell_type"),
        label = TRUE,
        repel = TRUE,
        shuffle = TRUE) +
    NoLegend()

ggsave("output/figures/all_dim.pdf",
       width = 25,
       height = 8)

all_dim
```

# Correct the data for model
```{r harmonize_model, dependson='merge_all', eval=TRUE}
if(!file.exists("output/rdata/all_sobj_integrated.qs")) {
    all_sobj$model <- "BALBC"
    all_sobj$model[
        all_sobj$sample %in% c("C57BL6", "F420", "tibia_F420")
        ] <- "C57BL6"
    all_sobj <- all_sobj %>%
        harmony::RunHarmony(group.by.vars = "model", dims.use = 1:30) %>%
        RunUMAP(reduction = "harmony", dims = 1:30) %>%
        FindNeighbors(reduction = "harmony", dims = 1:30) %>%
        FindClusters(resolution = 0.2)

    qs::qsave(all_sobj, "output/rdata/all_sobj_integrated.qs")
} else {
    all_sobj <- qs::qread("output/rdata/all_sobj_integrated.qs")
}

p1 <- r_dim_plot(all_sobj,
    group.by = "model",
    shuffle = TRUE) +
    theme(legend.position = "right")
p2 <- r_dim_plot(all_sobj,
    group.by = "cell_type",
    shuffle = TRUE,
    repel = TRUE)
p3 <- r_dim_plot(all_sobj,
    group.by = "seurat_clusters")
p1 + p2 + p3
```

# Grab just macrophages and sub cluster them
```{r immune, dependson='harmonize_model', eval=TRUE}
if(!file.exists("output/rdata/output/rdata/macs_subclustered.qs")) {
    if (!file.exists("misc/murine_macs.qs")) {
        mac_ids <- all_sobj@meta.data %>%
            filter(cell_type %in% c(
                "Monocytes",
                "Mono",
                "Int Mf",
                "Macrophages",
                "Macrophages activated",
                "DC1",
                "DC2"
            )) %>%
            rownames()
        qs::qsave(mac_ids, "misc/murine_macs.qs")
    } else {
        mac_ids <- qs::qread("misc/murine_macs.qs")
    }

    macs <- subset(all_sobj, cells = mac_ids) %>%
        FindVariableFeatures() %>%
        ScaleData() %>%
        RunPCA() %>%
        harmony::RunHarmony(group.by.vars = "model", dims.use = 1:30) %>%
        RunUMAP(reduction = "harmony", dims = 1:30) %>%
        FindNeighbors(reduction = "harmony", dims = 1:30) %>%
        FindClusters(resolution = seq(0.1, 0.8, 0.1))

    # clustree::clustree(macs)

    # A resolution of 0.3 looks pretty good
    macs$seurat_clusters <- macs$RNA_snn_res.0.3
    Idents(macs) <- macs$seurat_clusters

    p1 <- r_dim_plot(macs, group.by = "seurat_clusters")
    p2 <- r_dim_plot(macs, group.by = "cell_type")
    p3 <- r_dim_plot(macs, group.by = "sample")
    p1 + p2 + p3

    # Establish groups by tissue type
    macs$tissue <- "unassigned"
    macs$tissue[macs$sample %in% c("tibia_F420", "tibia_K7M2")] <- "Tibia Tumor"
    macs$tissue[macs$sample %in% c("F420", "K7M2")] <- "Lung Metastasis"
    macs$tissue[macs$sample %in% c("C57BL6", "BALBC")] <- "Healthy Lung"

    qs::qsave(macs, "output/rdata/macs_subclustered.qs")
} else {
    macs <- qs::qread("output/rdata/macs_subclustered.qs")
}
```

# Plot the macrophages
```{r macs, dependson='immune', eval=TRUE}
if(!file.exists("misc/murine_macs_assignments.qs")) {
    if(!file.exists("output/rdata/macs_subclustered_cleaned.qs")) {
        r_dim_plot(macs, split.by = "tissue")
        macs <- run_fdl(macs)
        r_dim_plot(macs, split.by = "tissue", reduction = "fdl")

        deg_macs_1 <- FindAllMarkers(macs)

        gt::gt(deg_macs_1 %>%
            group_by(cluster) %>%
            filter(pct.1 > 0.2) %>%
            slice_max(avg_log2FC, n = 20) %>%
            arrange(cluster, -avg_log2FC)) %>%
            gt::tab_header(
                "DEGs in murine tumor-associated monouclear cells (before cleaning)")

        # Clean up misclassified clusters
        macs <- subset(macs,
            idents = c(
                6, # Epithelial
                8, # Fibroblast
                9, # Unknown, Tumor?
                10, # Endothelial
                11, # Lymphocytes
                12, # Unknown, Tumor?
                # 13, # Alveolar macs
                16, # Fibroblasts
                17, # Goblet
                18, # Erythrocyte
                19, # Neural
                20 # Mast
            ),
            invert = TRUE)

        # Reprocess and plot
        macs <- macs %>%
            FindVariableFeatures() %>%
            ScaleData() %>%
            RunPCA() %>%
            harmony::RunHarmony(group.by.vars = "model", dims.use = 1:30) %>%
            RunUMAP(reduction = "harmony",
                dims = 1:30,
                min.dist = 0.5,
                spread = 5) %>%
            FindNeighbors(reduction = "harmony", dims = 1:30) %>%
            FindClusters(resolution = seq(0.1, 1, 0.1))

        # A resolution of 1 looks pretty good
        Idents(macs) <- macs$RNA_snn_res.1
        r_dim_plot(macs, split.by = "tissue")

        macs <- run_fdl(macs)
        r_dim_plot(macs, split.by = "tissue", reduction = "fdl")

        qs::qsave(macs, "output/rdata/macs_subclustered_cleaned.qs")
    } else {
        macs <- qs::qread("output/rdata/macs_subclustered_cleaned.qs")
    }

    # Re-characterize the subclustered macs
    deg_macs_2 <- FindAllMarkers(macs)

    gt::gt(deg_macs_2 %>%
        group_by(cluster) %>%
        filter(pct.1 > 0.5) %>%
        slice_max(avg_log2FC, n = 20) %>%
        arrange(cluster, -avg_log2FC)) %>%
        gt::tab_header(
            "DEGs in murine tumor-associated monouclear cells (cleaned)")

    # Label against the murine tumor immune atlas
    # https://doi.org/10.1101/gr.273300.120
    macs_matrix <- LayerData(
        macs,
        assay = "RNA",
        layer = "counts")

    mac_marks <- readxl::read_xlsx(
        "misc/mac_mono_subsets.xlsx") %>%
        filter(Species == "Mouse") %>%
        select(Annotation, ID) %>%
        group_by(Annotation) %>%
        nest() %>%
        as.list()
    names(mac_marks$data) <- mac_marks$Annotation
    mac_marks <- mac_marks$data

    mac_sigs <- lapply(mac_marks, function(x) {
        as.character(x) %>%
            GSEABase::GeneSet()
    })

    mac_scores <- lapply(seq_along(mac_sigs), function(i) {
        AUCell::AUCell_run(macs_matrix, mac_marks[[i]]) %>%
        AUCell::getAUC() %>%
        as.data.frame()
    }) %>%
        bind_rows() %>%
        t() %>%
        as.data.frame()
    names(mac_scores) <- names(mac_marks)

    macs <- AddMetaData(macs, mac_scores)

    mac_scores <- macs[[]] %>%
        select(
            seurat_clusters,
            IFN_TAMs,
            Inflam_TAMs,
            LA_TAMs,
            Angio_TAMs,
            Reg_TAMs,
            Prolif_TAMs,
            RTM_TAMs,
            cTIMs,
            ncMonos) %>%
        group_by(seurat_clusters) %>%
        summarise_all(mean) %>%
        as.data.frame()

    rownames(mac_scores) <- mac_scores[, 1]
    mac_scores <- mac_scores[, -1]
    data.matrix(mac_scores) %>%
        heatmap()

    auc_plots <- lapply(colnames(mac_scores), function(i) {
        r_feature_plot(macs, i, min.cutoff = 0.2, max.cutoff = 0.6)
    })
    wrap_plots(auc_plots, ncol = 4)

    # Look at expression of key marker genes by cluster
    mac_genes <- c(
        "Mmp9", "Ckb", "Ctsk",  # Osteoclast-TAMs, https://doi.org/10.1186/s41232-022-00213-x
        "Trem2", "Cd9", "Gpnmb", "Spp1",  # Scar-associated, see https://doi.org/10.1038/s41586-019-1631-3
        # TAMs, generic
        "Ifit1", "Ifit2", "Cxcl10", # IFN-TAMs
        "Il1a", "Il1b", "Fn1",  # Inflammatory-TAMs
        # "Acp5", "Ctsk", # LA-TAMs
        "Top2a", "Hist1h1b", "Birc5",  # Cycling
        "Marco", "Siglecf", "Itgax", # Alveolar
        "Lyve1", "Mrc1",  # Tissue resident/interstitial
        "S100a8", "Sell", "Ifitm6", "Ly6c2",  # cMonocyte
        "Itgal", "Ace", "Spn", "Cx3cr1", # ncMonocyte
        "Cd209a", "Ccr7", "Dcstamp", # Pre-DC
        "H2-Ab1", "Clec9a", "Irf8",  # DC1
        "Fscn1", "Ccl5") # DC2

    DotPlot(macs,
        features = mac_genes,
        cols = "RdBu",
        col.max = 1.5) +
        scale_y_discrete(limits = rev) +
        theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
        coord_fixed()

    r_dim_plot(macs, split.by = "tissue")

    # What distinguishes the big cluster - 0, 1, 5?
    FindMarkers(macs, ident.1 = c(0, 1, 5)) %>%
        filter(pct.1 > 0.5) %>%
        arrange(-avg_log2FC) %>%
        head(n = 20)

    # Name the clusters
    macs2 <- RenameIdents(macs,
        `0` = "Scar-TAMs",
        `1` = "TAMs",
        `2` = "IFN-TAMs",
        `3` = "TAMs",
        `4` = "TAMs",
        `5` = "Inflammatory-TAMs",
        `6` = "DC1",
        `7` = "TAMs",
        `8` = "Pre-DC",
        `9` = "Pre-DC",
        `10` = "Scar-TAMs",
        `11` = "cMonocyte",
        `12` = "Cycling",
        `13` = "cMonocyte",
        `14` = "ncMonocyte",
        `15` = "Pre-DC",
        `16` = "Cycling",
        `17` = "TAMs",
        `18` = "Alveolar",
        `19` = "Interstitial",
        `20` = "Osteoclast-TAMs",
        `21` = "Scar-TAMs",
        `22` = "cMonocyte")

    macs2$macs_assignment <- Idents(macs2) %>%
        factor(levels = c(
            "Osteoclast-TAMs",
            "Scar-TAMs",
            "TAMs",
            "IFN-TAMs",
            "Inflammatory-TAMs",
            "Cycling",
            "Alveolar",
            "Interstitial",
            "cMonocyte",
            "ncMonocyte",
            "Pre-DC",
            "DC1",
            "DC2",
            0:25))

    r_dim_plot(macs2, split.by = "tissue")

    DotPlot(macs2,
        features = mac_genes,
        group.by = "macs_assignment",
        cols = "RdBu",
        col.max = 1.5) +
        scale_y_discrete(limits = rev) +
        theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
        coord_fixed()

    qs::qsave(macs2$macs_assignment, "misc/murine_macs_assignments.qs")
} else {
    macs_assignment <- qs::qread("misc/murine_macs_assignments.qs")
    macs <- subset(macs, cells = names(macs_assignment))
    macs$macs_assignment <- macs_assignment %>%
        factor(levels = c(
            "Osteoclast-TAMs",
            "Scar-TAMs",
            "TAMs",
            "IFN-TAMs",
            "Inflammatory-TAMs",
            "Cycling",
            "Alveolar",
            "Interstitial",
            "cMonocyte",
            "ncMonocyte",
            "Pre-DC",
            "DC1"))

    macs <- macs %>%
        FindVariableFeatures() %>%
        ScaleData() %>%
        RunPCA() %>%
        harmony::RunHarmony(group.by.vars = "model", dims.use = 1:30) %>%
        RunUMAP(reduction = "harmony",
            dims = 1:30,
            local.connectivity = 10L,
            spread = 5) %>%
        FindNeighbors(reduction = "harmony", dims = 1:30) %>%
        FindClusters(resolution = 0.8)

    r_dim_plot(macs, split.by = "tissue", group.by = "macs_assignment")

    macs <- run_fdl(macs)
    r_dim_plot(macs,
        split.by = "tissue",
        reduction = "fdl",
        group.by = "macs_assignment")

    qs::qsave(macs, "output/rdata/macs_subclustered_cleaned.qs")
}

p1 <- r_dim_plot(macs, group.by = "seurat_clusters")
p2 <- r_dim_plot(macs, group.by = "cell_type")
p3 <- r_dim_plot(macs, group.by = "sample", shuffle = TRUE)
p1 + p2 + p3

r_dim_plot(macs, split.by = "tissue", group.by = "macs_assignment")
```

```{r mac_plots, dependson='macs', eval=TRUE}
# Refine the markers for the macrophage cell types
mac_genes <- c(
    "Mmp9", "Ctsk", "Nfatc1", # Osteoclast-TAMs, https://doi.org/10.1186/s41232-022-00213-x
    "Cd9", "Trem2", "Spp1", "Gpnmb", # Scar-associated, see https://doi.org/10.1038/s41586-019-1631-3
    "Ms4a7", "Selenop", # TAMs, generic
    "Ifit1", "Ifit2", "Cxcl10", # IFN-TAMs
    "Il1a", "Il1b", "Fn1",  # Inflammatory-TAMs
    "Top2a", "Hist1h1b", "Birc5",  # Cycling
    "Ly6c2", "Sell", "Ifitm6",  # cMonocyte
    "Itgal", "Ace", "Spn", # ncMonocyte
    "Cd209a", "Ccr7", "Dcstamp", # Pre-DC
    "Xcr1", "Clec9a", "Irf8") # DC1

Idents(macs) <- macs$macs_assignment

macs2 <- subset(macs,
    macs_assignment %in% c("Interstitial", "Alveolar"),
    invert = TRUE)

DotPlot(macs2,
    features = mac_genes,
    group.by = "macs_assignment",
    cols = "RdBu",
    col.max = 1.5) +
    scale_y_discrete(limits = rev) +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
    coord_fixed()

r_dim_plot(macs2, split.by = "tissue")

cluster_counts <-
    table(macs2$obj_name, macs2$macs_assignment) %>%
    as.data.frame() %>%
    dplyr::rename("Sample" = "Var1",
                  "Cluster" = "Var2",
                  "Count" = "Freq") %>%
    group_by(Cluster) %>%
    arrange(desc(Count), .by_group = TRUE) %>%
    ggplot(aes(y = Cluster, x = Sample, fill = log10(Count))) +
    geom_tile() +
    geom_text(aes(label = Count), color = "white")

cluster_counts

# Save the final object
qs::qsave(macs, "output/rdata/final_murine_macs.qs")
```


