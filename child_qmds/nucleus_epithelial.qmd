We are interested in how the epithelial cell subpopulations differ between the treated and untreated samples.

## Subset Epithelial Cells

First I need to subset out the epithelial cells.

```{r subset-epithelial}
epi <- subset(merged_samples, coarse_cell_type == "Epithelial") %>%
    process_seurat()

DimPlot(epi, group.by = "sn_cell_type", split.by = "sample_id", label = TRUE, ncol = 1, pt.size = 1) +
    NoLegend()
```

### Find Markers For Each Cluster

```{r}
Idents(epi) <- epi$seurat_clusters
epi_degs <- FindAllMarkers(JoinLayers(epi))
write.table(epi_degs, "results/de/epi_degs.tsv")
# get top 10 degs for each cluster
epi_degs %>%
    group_by(cluster) %>%
    subset(abs(avg_log2FC) > 1 &
           p_val_adj < 0.05) %>%
    arrange(desc(abs(avg_log2FC))) %>%
    slice_head(n = 10)
```

### Find All Markers for Cell Types

```{r}
Idents(epi) <- epi$sn_cell_type

epi_subtype_degs <- FindAllMarkers(JoinLayers(epi))
write.table(epi_subtype_degs, "results/de/epi_subptype_degs.tsv")
```

These markers aren't very informative, I'm going to try comparing these datasets to single cell datasets and seeing if there's overlap with the already annotated datasets.

## Compare to Single-Cell Data

### Run Singler using 2 Epithelial Datasets

I want to re-run singler using two single-cell datasets: murine_aec and mouse_lung. The hope is that mouse_lung will correctly label these cells as lung epithelial, and then the murine_aec-based predictions will elucidate general cell type composition. However I will verify the final cell types with James. I'm going to merge `mouse_lung` and `murine_aec` for this.

```{r read-in-murine-aec}
murine_aec <- qs::qread("output/rdata/murine_aec_post-filtering.qs") %>%
    process_seurat()
murine_aec@meta.data <- murine_aec@meta.data %>%
    mutate(paper_cell_type =
           recode(seurat_clusters,
                  `0` = "DATP",
                  `1` = "AEC2",
                  `2` = "DATP",
                  `3` = "pAEC2",
                  `4` = "cAEC2",
                  `5` = "AEC1",
                  `6` = "cAEC2"))

epi$rna_type <- "single nucleus"
```


```{r merge-murine-mouse}
mouse_lung <-
    qs::qread("/home/gdrobertslab/lab/GenRef/sc_ref_datasets/mouse/GSE151974/mouse_lung_ref.qs")

#give same column to hold ref labels
murine_aec$ref_label <- murine_aec$paper_cell_type
mouse_lung$ref_label <- mouse_lung$CellType

merged_ref <- merge(murine_aec, mouse_lung) %>%
    process_seurat()

merged_preds <- SingleR::SingleR(test = as.SingleCellExperiment(JoinLayers(epi)),
                                 ref = as.SingleCellExperiment(merged_ref),
                                 labels = merged_ref$ref_label,
                                 aggr.ref = TRUE)
write.table(merged_preds, "results/cell_type_annotation/merged_preds.tsv")

epi <- AddMetaData(object = epi,
                   metadata = merged_preds$labels,
                   col.name = "merged_preds")

DimPlot(epi, group.by = "merged_preds")

group_by(epi@meta.data, merged_preds) %>%
    select(merged_preds) %>%
    mutate(total = n()) %>%
    unique() %>%
    arrange(desc(total)) %>%
    interactive_dt()
```

There's too many different annotations so I'm going to condense some of the different types.

```{r rename-merged_preds}
# I need to rename some of the cell types so they match up between the references.
epi@meta.data <- epi@meta.data %>%
    mutate(condensed_cts = recode(merged_preds,
                                  "Col14a1+ fibroblast" = "FB",
                                  "Col13a1+ fibroblast" = "FB",
                                  "Int Mf" = "FB",
                                  "Alv Mf" = "FB",
                                  "Myofibroblast" = "FB",
                                  "CD4 T cell 1" = "Immune",
                                  "DC2" = "Immune",
                                  "B cell 1" = "Immune",
                                  "gd T cell" = "Immune",
                                  "Mono" = "Immune",
                                  "SMC" = "Mural",
                                  "Pericyte 1" = "Mural",
                                  "Pericyte 2" = "Mural",
                                  "Cap" = "Blood vessel",
                                  "Vein" = "Blood vessel",
                                  "Cap-a" = "Blood vessel",
                                  "Art" = "Blood vessel"))

DimPlot(epi, group.by = "condensed_cts", label = TRUE)


small_epi <- subset(epi,
       condensed_cts %in% c("AEC1",
                            "AEC2",
                            "AT1",
                            "AT2 1",
                            "AT2 2",
                            "cAEC2",
                            "Ciliated",
                            "Club",
                            "DATP",
                            "pAEC2")) %>%
    process_seurat() %>%
    JoinLayers()

table(small_epi$condensed_cts, small_epi$seurat_clusters)

DimPlot(small_epi, group.by = c("condensed_cts", "seurat_clusters"), label = TRUE)
```

Based on these last two plots, I'm still not entirely sure about the best way to go about annotating some of these cell types. I'm fairly certain clusters 1 and 5 are AEC1, and that cluster 0 is alveolar type 2 (likely pAEC2?). However, clusters 2-4 and 7 are a hodge podge of type 1 and type 2 epithelial cells. I'm wondering if this resolution is too granular for the sc to sn annotations to be informative.

## Find Markers in small_epi

James will use these markers to make decisions on cell types for each seurat cluster.

```{r small-epi-markers}
small_epi_markers <- FindAllMarkers(small_epi)

write.table(small_epi_markers, "results/de/small_epi_markers.csv")
```

### Label Cell Types

I'm going to remove fibroblasts and endothelial cells before reclustering and labelling. I'm going to keep the code chunk below commented out because these assignments were made before I subsetted out the tumor cells. I'm using overlap between clusters in the new object and the old one to make my new assignments.

```{r add-manual-cell-types}
#| eval: FALSE
# small_epi@meta.data <- small_epi@meta.data %>%
#     mutate(james_cell_type = recode(seurat_clusters,
#                                     `0` = "AEC2",
#                                     `1` = "AEC1",
#                                     `2` = "DATP",
#                                     `3` = "primed AEC2",
#                                     `4` = "FB",
#                                     `5` = "AEC1",
#                                     `6` = "endothelial",
#                                     `7` = "pAEC2"))
# qs::qsave(small_epi, "output/rdata/small_epi.qs")

old_small_epi <- qs::qread("output/rdata/nucleus/small_epi.qs")

cluster_membership <- list()
for (i in sort(unique(small_epi$seurat_clusters))) {
    #get cell barcodes for the current cluster
    new_bcs <- subset(small_epi@meta.data, seurat_clusters == i) %>%
        rownames()
    #initialize vector to hold % of new_bcs that matchup with the old clusters
    tmp <- c()

    #loop through old object's clusters and see where new_bcs fall within them
    for (j in sort(unique(old_small_epi$seurat_clusters))) {
        old_bcs <- subset(old_small_epi@meta.data, seurat_clusters == j) %>%
            rownames()
        tmp[j] <- mean(new_bcs %in% old_bcs)
    }

    tmp <- setNames(tmp, sort(unique(old_small_epi$seurat_clusters)))
    cluster_membership[[i]] <- tmp
}
cluster_membership
```

Based on these overlaps, I'm going to make the following cell type assignments for my new `small_epi` object.

0: AEC1
1: AEC2
2: DATP
3: AEC2
4: primed AEC2
5: AEC1
6: pAEC2

```{r add-new-assignments}
#Remove fibroblasts and endothelial cells
small_epi <- subset(small_epi,
                    seurat_clusters != 6 &
                    seurat_clusters != 7) %>%
    process_seurat()

small_epi@meta.data <- small_epi@meta.data %>%
    mutate(james_cell_type = recode(seurat_clusters,
                                    `0` = "AEC1",
                                    `1` = "AEC2",
                                    `2` = "DATP",
                                    `3` = "pAEC2",
                                    `4` = "pAEC2",
                                    `5` = "AEC1",
                                    `6` = "cAEC2"),
           treatment = recode(sample_id,
                              "S0291" = "Control",
                              "S0283" = "Late Nintedanib",
                              "S0284" = "Early Nintedanib"))

qs::qsave(small_epi, "output/rdata/nucleus/new_small_epi.qs")

pdf("output/figures/nucleus/epithelial_split_umap.pdf", width = 12, height = 4)
r_dim_plot(small_epi,
           group.by = "james_cell_type",
           split.by = "treatment",
           label = TRUE) +
    NoLegend()
dev.off()

#make bar plots showing proportions of cell types
small_epi_cts <- small_epi@meta.data %>%
    group_by(james_cell_type, treatment) %>%
    mutate(total = n()) %>%
    dplyr::select(c(treatment, james_cell_type, total)) %>%
    unique()

pdf("output/figures/nucleus/epithelial_pct_plot.pdf")
ggplot(small_epi_cts, aes(fill = james_cell_type, y = total, x = treatment)) +
    geom_bar(position = "fill", stat = "identity")
dev.off()
```

## Examine Epithelial Populations Across Treatments

It is interesting to see how the epithelial subpopulation composition differs between treatment groups.

```{r epi-across-trt}
DimPlot(small_epi, split.by = "treatment", group.by = "james_cell_type")
```
